
# <type>(<scope>): <subject>
# ⬆️ 50-character subject
# Type
#   * feat: A new feature
#   * fix: A bug fix
#   * docs: Documentation only changes
#   * style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
#   * refactor: A code change that neither fixes a bug nor adds a feature
#   * perf: A code change that improves performance
#   * test: Adding missing tests
#   * chore: Changes to the build process or auxiliary tools and libraries such as documentation generation

# ⬇️ 72-character wrapped body
# The whole change made.
# <body>

# ⬇️ 72-character wrapped footer
# Anything that could result in a seriously important breaking change.
# <footer>

# For Github:
# Fixes: #ISSUE
# Closes: #ISSUE
# Relates to #ISSUE

# Skipping CI (on like Travis)
# [ci skip]

# We use Angular's commit message outline:
# https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit

# Places for pointers on a good commit message are:
#  * https://robots.thoughtbot.com/5-useful-tips-for-a-better-commit-message
#  * http://chris.beams.io/posts/git-commit/
#  * http://365git.tumblr.com/post/3308646748/writing-git-commit-messages
#  * http://dev.solita.fi/2013/07/04/whats-in-a-good-commit.html
